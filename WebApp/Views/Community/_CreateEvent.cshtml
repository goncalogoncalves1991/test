@model WebApp.Models.Event

<div id="CreateEventForm">
    @using (Ajax.BeginForm("CreateEvent",
                new AjaxOptions
                {
                    UpdateTargetId = "CreateEventForm",
                    OnSuccess = "onSuccess"
                }))
    {
        @Html.AntiForgeryToken()
        

        <div class="form-horizontal">
            <center>
                <h2>Event</h2>
            </center>
            <hr />
            @Html.ValidationSummary(true)


            <input type="hidden" name="communityId" id="communityId" value="@Model.communityId" />
            <input type="hidden" name="communityName" id="communityName" value="@Model.communityName" />


            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "4", cols = "100" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Local, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Local, new { htmlAttributes = new { @class = "form-control", id = "txtPlaces" } })
                    @Html.ValidationMessageFor(model => model.Local, "", new { @class = "text-danger" })
                </div>
            </div>

            <input type="hidden" name="Latitude" id="Latitude" />
            <input type="hidden" name="Longitude" id="Longitude" />


            <div class="form-group">
                @Html.LabelFor(model => model.NrOfTickets, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NrOfTickets, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NrOfTickets, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.InitDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class='input-group timepicker col-md-4 col-md-4' id='startDate'>
                    @Html.TextBoxFor(model => model.InitDate, new { @class = "form-control", type = "datetime" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                    @Html.ValidationMessageFor(model => model.InitDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class='input-group timepicker col-sm-4 col-md-4' id='endDate'>
                    @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control", type = "datetime" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>   


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="SubmitButton" type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>



        </div>
    }
</div>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places"></script>

<script type="text/javascript">

        google.maps.event.addDomListener(window, 'load', function () {
            var options = {
                types: ['address'],
                componentRestrictions: { country: "pt" }
            };
            var places = new google.maps.places.Autocomplete(document.getElementById('txtPlaces'), options);

            google.maps.event.addListener(places, 'place_changed', function () {


                var latitude = places.getPlace().geometry.location.lat();
                var longitude = places.getPlace().geometry.location.lng();
                fillHidenFields(latitude, longitude)
            });
        });

        function fillHidenFields(lat, lon) {
            $("#Latitude").val(lat + "");
            $("#Longitude").val(lon + "");
        }

        var onSuccess = function (result) {
            if (result.url) {
                window.location.href = result.url;
            }
        }

</script>

    
    



